;coin21.ss
(define VARIANT 21)
(define LAST-DIGIT-OF-GROUP-NUMBER 6)
(define KINDS-OF-COINS 5)

(define (first-denomination kinds-of-coins)
  (cond ((= kinds-of-coins 1) 1)
        (#t (cond((= kinds-of-coins 2) 3)
        (#t (cond((= kinds-of-coins 3) 10)
        (#t (cond((= kinds-of-coins 4) 20)
        (#t (cond((= kinds-of-coins 5) 50)
        (#t 0)))))))))
  )
)

(define (count-change amount)
   (display "______\n amount: ")
   (display amount)
   (newline)
   (display "KINDS-OF-COINS: ")
   (display KINDS-OF-COINS)
   (newline)
   (let((largest-coin (first-denomination KINDS-OF-COINS)))
     (display "largest-coin: ")
     (display largest-coin)
     (newline)
     (cond ((< 0 amount)(cond ((< 0 KINDS-OF-COINS)(cond ((< 0 largest-coin)
                 (let()
                   (display "List of coin denominations: ")
                   (denomination-list KINDS-OF-COINS)
                   (display "count-change= ")
                   (cc amount KINDS-OF-COINS)
                  )
                )
           (#t (let() (display "Improper parameter value!\ncount-change= ") -1))))
           (#t (let() (display "Improper parameter value!\ncount-change= ") -1))))
           (#t (let() (display "Improper parameter value!\ncount-change= ") -1)))
   ) 
)


(define (pier? x? y?)
  (= 0 (cond((or x? y?) 0)(#t 1)))
)

(define (cc amount kinds-of-coins)
  (cond ((= amount 0) 1)
        (#t (cond ((pier? (< amount 0) (= kinds-of-coins 0)) 0)
        (#t (+ (cc amount (- kinds-of-coins 1))
               (cc (- amount (first-denomination kinds-of-coins)) kinds-of-coins)))))
  )
)

(define (denomination-list kinds-of-coins)
  (cond ((= kinds-of-coins 0) (let() (newline) 0))
      (#t (let()
        (display (first-denomination kinds-of-coins))
        (display " ")
        (denomination-list (- kinds-of-coins 1))
      ))
  )
)

(define (GR-AMOUNT)
  (remainder (+ (* 100 LAST-DIGIT-OF-GROUP-NUMBER) VARIANT) 231)
)

(display "Variant ")
(display VARIANT)
(newline)
(newline)
(display (count-change 100))
(newline)
(display (count-change (GR-AMOUNT)))
(newline)
(set! KINDS-OF-COINS 13)
(display (count-change 100))
(newline)
(display "(c) Pishchik E.S. 2021\n")